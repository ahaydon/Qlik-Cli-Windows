version: 2.1
executors:
  powershell:
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:7.0-alpine
    shell: /usr/bin/pwsh

jobs:
  test-unit:
    executor: powershell
    steps:
      - checkout
      - run:
          name: Install Pester
          command: |
            $ProgressPreference = 'SilentlyContinue'
            Install-Module Pester -Force -RequiredVersion 4.10.1
      - run:
          name: Run Pester unit tests
          command: |
            New-Item `
              -ItemType Directory `
              -Path /output/test-results/pester | Out-Null

            Invoke-Pester `
              -Script ./tests/unit/ `
              -EnableExit `
              -OutputFormat JUnitXml `
              -OutputFile /output/test-results/pester/results.xml
      - store_test_results:
          path: /output/test-results
      - store_artifacts:
          path: /output/test-results
          destination: test-results

  quality-check:
    executor: powershell
    steps:
      - checkout
      - run:
          name: Install PSScriptAnalyzer
          command: |
            $ProgressPreference = 'SilentlyContinue'
            Install-Module PSScriptAnalyzer -Force -RequiredVersion 1.18.3 | Out-Null
            Import-Module PSScriptAnalyzer
      - run:
          name: Check best practices
          command: Invoke-ScriptAnalyzer -Path . -Recurse -ReportSummary -EnableExit
      - run:
          name: Check code formatting
          command: Invoke-ScriptAnalyzer -Path . -Recurse -Settings CodeFormatting -ExcludeRule PSAlignAssignmentStatement -ReportSummary -EnableExit

  build:
    executor: powershell
    steps:
      - checkout
      - run:
          name: Install Psake
          command: |
            $ProgressPreference = 'SilentlyContinue'
            Install-Module Psake -Force | Out-Null
      - run:
          name: Build
          command: |
            $ProgressPreference = 'SilentlyContinue'
            $ErrorActionPreference = 'Stop'
            Invoke-psake -taskList Package -parameters @{version="$($env:CIRCLE_TAG.Substring(1))"}
      - run:
          name: Check version is later than any published version
          command: |
            $ProgressPreference = 'SilentlyContinue'
            if ((Test-ModuleManifest -Path ./output/Qlik-Cli/Qlik-Cli.psd1).Version -le (Find-Module -Name Qlik-Cli).Version) {
              Write-Error "Module version must be newer than published version"
            }
      - persist_to_workspace:
          root: .
          paths:
            - output
      - store_artifacts:
          path: output/Qlik-Cli.zip
          destination: Qlik-Cli.zip

  publish-powershell-gallery:
    working_directory: /workspace/output/Qlik-Cli
    executor: powershell
    steps:
      - attach_workspace:
          at: /workspace
      - run:
          name: Publish module to PowerShell Gallery
          command: Publish-Module -Path ./ -NuGetApiKey $env:PSG_API_KEY -Tags Qlik, Sense, Windows -Verbose

  publish-github-release:
    docker:
      - image: cibuilds/github:latest
    steps:
      - attach_workspace:
          at: /workspace
      - run:
          name: Publish release on GitHub
          command: |
            ghr -t ${GITHUB_TOKEN} \
                -u ${CIRCLE_PROJECT_USERNAME} \
                -r ${CIRCLE_PROJECT_REPONAME} \
                -c ${CIRCLE_SHA1} \
                -replace \
                ${CIRCLE_TAG} \
                /workspace/output/Qlik-Cli.zip

workflows:
  version: 2
  test-and-deploy:
    jobs:
      - test-unit:
          filters:
            tags:
              only: /^v\d+\.\d+\.\d+.*/
      - quality-check:
          filters:
            tags:
              only: /^v\d+\.\d+\.\d+.*/
      - build:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v\d+\.\d+\.\d+.*/
      - publish-powershell-gallery:
          context: powershell-gallery
          requires:
            - test-unit
            - quality-check
            - build
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v\d+\.\d+\.\d+.*/
      - publish-github-release:
          context: github
          requires:
            - test-unit
            - quality-check
            - build
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v\d+\.\d+\.\d+.*/
